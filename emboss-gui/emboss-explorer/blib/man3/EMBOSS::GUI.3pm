.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EMBOSS::GUI 3"
.TH EMBOSS::GUI 3 "2007-04-25" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
EMBOSS::GUI \- provide web\-based access to EMBOSS
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke McCarthy <lukem@gene.pbi.nrc.ca>
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use EMBOSS::GUI;
.Ve
.PP
.Vb 1
\&  $emboss = EMBOSS::GUI->new();
.Ve
.PP
.Vb 6
\&  $emboss->intro_page;
\&  $emboss->about_page;
\&  $emboss->menu_page;
\&  $emboss->app_page;
\&  $emboss->help_page;
\&  $emboss->default_page;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1EMBOSS::GUI\s0 provides a simple web-based interface to the \s-1EMBOSS\s0 suite of
bioinformatics tools.  The distribution should have included a sample \s-1CGI\s0
script that wraps the module appropriately.
.PP
Alternatively, \s-1EMBOSS::GUI\s0 can be used to gather information about the local
\&\s-1EMBOSS\s0 installation.  Public methods for that purpose are described below:
.IP "new(%args)" 4
.IX Item "new(%args)"
Returns a new \s-1EMBOSS::GUI\s0 object.
.Sp
%args is a hash of optional named arguments.  The following arguments are
\&\f(CW%recognized:\fR
.RS 4
.ie n .IP "html => $object" 4
.el .IP "html => \f(CW$object\fR" 4
.IX Item "html => $object"
Specifies an alternative \s-1HTML\s0 renderer object to use when generating the web
interface.  See \s-1EMBOSS::GUI::XHTML\s0 for the methods the replacement object must
implement.
.RE
.RS 4
.RE
.IP "\fIgo()\fR" 4
.IX Item "go()"
Process \s-1CGI\s0 arguments and display the corresponding page.
.IP "\fIintro_page()\fR" 4
.IX Item "intro_page()"
Generates an introductory page describing \s-1EMBOSS\s0 and the \s-1GUI\s0.
.IP "\fIabout_page()\fR" 4
.IX Item "about_page()"
Generates a page describing the local \s-1EMBOSS\s0 configuration, including the
version and filesystem location of each perl module required by the \s-1GUI\s0.
.IP "\fImenu_page()\fR" 4
.IX Item "menu_page()"
Generates the main menu page.
.IP "\fIapp_page()\fR" 4
.IX Item "app_page()"
Generates the application-specific input page or runs an \s-1EMBOSS\s0 application
and generates the output page.
.IP "\fIhelp_page()\fR" 4
.IX Item "help_page()"
Generates the application-specific manual page.
.IP "\fIoutput_page()\fR" 4
.IX Item "output_page()"
Generates the application output page, or a placeholder page if the application is still running.
.IP "\fIdefault_page()\fR" 4
.IX Item "default_page()"
Generates a default page according to the current configuration.
.IP "\fIframeset_page()\fR" 4
.IX Item "frameset_page()"
Generates a page that sets up the menu and main content frames.
.IP "\fIapps()\fR" 4
.IX Item "apps()"
Returns a list of available \s-1EMBOSS\s0 applications.  Each element of the list is
a reference to an array containing the name and description of an application.
.IP "\fIgroups()\fR" 4
.IX Item "groups()"
Returns a list of application groups.  Each element of the list is a reference
to an array containing the name of the group and a list of applications
belonging to that group (each application is in turn a reference to an array
as described in \fIapps()\fR above.)  Note that an individual application can appear
in multiple groups.
.IP "is_excluded($subject)" 4
.IX Item "is_excluded($subject)"
Returns true if the subject is being excluded from public display, false
otherwise.
.Sp
$subject is the name of an application or application group as it appears in
the output from wossname.
.IP "\fIdatabases()\fR" 4
.IX Item "databases()"
Returns a list of available databases.  Each element of the list is the name
of a database, suitable for use in a \s-1USA\s0.
.SH "BUGS"
.IX Header "BUGS"
None that I know of...
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2004 Luke McCarthy.  All rights reserved.  This program is free
software.  You may copy or redistribute it under the same terms as Perl itself.
