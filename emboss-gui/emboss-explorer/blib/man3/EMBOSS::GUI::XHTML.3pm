.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "EMBOSS::GUI::XHTML 3"
.TH EMBOSS::GUI::XHTML 3 "2006-11-13" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
EMBOSS::GUI::XHTML \- generate HTML for EMBOSS::GUI
.SH "AUTHOR"
.IX Header "AUTHOR"
Luke McCarthy <lukem@gene.pbi.nrc.ca>
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Not for public consumption.  Use \s-1EMBOSS::GUI\s0 instead.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1EMBOSS::GUI::XHTML\s0 generates the \s-1HTML\s0 required by \s-1EMBOSS::GUI\s0.  The appearance
of \s-1EMBOSS::GUI\s0 can be customized by editing or replacing the default style
sheet.  There is very little that cannot be accomplished in this way.  If new
\&\s-1HTML\s0 is absolutely required, simply create a new module that provides
the methods described below and specify the new module in the \s-1EMBOSS::GUI\s0
constructor.
.PP
Public methods are described below:
.IP "new(%args)" 4
.IX Item "new(%args)"
Returns a new \s-1EMBOSS::GUI::XHTML\s0 object.
.Sp
%args is a hash of optional named arguments.  The following arguments are
\&\f(CW%recognized:\fR
.RS 4
.ie n .IP "static => $boolean" 4
.el .IP "static => \f(CW$boolean\fR" 4
.IX Item "static => $boolean"
If \f(CW$boolean\fR is true, the generated \s-1HTML\s0 will assume that, where possible, the
pages of the interface have been generated statically and will be linked 
appropriately.  See also the mkstatic script in the \s-1EMBOSS::GUI\s0 distribution.
.ie n .IP "frames => $boolean" 4
.el .IP "frames => \f(CW$boolean\fR" 4
.IX Item "frames => $boolean"
If \f(CW$boolean\fR is true, the generated \s-1HTML\s0 will assume that the main menu is in
its own frame and doesn't have to be added to each page.
.ie n .IP "script_url => $url" 4
.el .IP "script_url => \f(CW$url\fR" 4
.IX Item "script_url => $url"
Specifies the \s-1URL\s0 of the main \s-1EMBOSS::GUI\s0 \s-1CGI\s0 script.  This parameter is
required if static pages are generated, otherwise the \s-1URL\s0 will be determined
from the \s-1CGI\s0 environment.
.ie n .IP "style_url => $url" 4
.el .IP "style_url => \f(CW$url\fR" 4
.IX Item "style_url => $url"
Specifies the \s-1URL\s0 of the style sheet to use.
.ie n .IP "image_url => $url" 4
.el .IP "image_url => \f(CW$url\fR" 4
.IX Item "image_url => $url"
Specifies a \s-1URL\s0 prefix to place before image links.
.ie n .IP "manual_url => $url" 4
.el .IP "manual_url => \f(CW$url\fR" 4
.IX Item "manual_url => $url"
Specifies a \s-1URL\s0 prefix to place before manual links.  This prefix is only used
if static pages are generated.
.RE
.RS 4
.RE
.IP "\fIintro_page()\fR" 4
.IX Item "intro_page()"
Generates an introductory page describing \s-1EMBOSS\s0 and the \s-1GUI\s0.
.IP "menu_page(@entries)" 4
.IX Item "menu_page(@entries)"
Generates the main menu page.
.Sp
@entries is either a list of applications as returned by \fIEMBOSS::GUI::apps()\fR,
or a list of groups as returned by \fIEMBOSS::GUI::groups()\fR.
.ie n .IP "input_page($acd, $hide_optional)" 4
.el .IP "input_page($acd, \f(CW$hide_optional\fR)" 4
.IX Item "input_page($acd, $hide_optional)"
Generates the application-specific input page.
.Sp
$acd is an \s-1EMBOSS::ACD\s0 object that describes the application.
.Sp
$hide_optional is a boolean value that determines whether optional parameters
(also called additional parameters in the \s-1EMBOSS\s0 documenation) will appear in
the input page.
.IP "input_page($output_dir)" 4
.IX Item "input_page($output_dir)"
Generates an output page based on the contents of the specified directory.
.Sp
$output_dir is a directory containing the output of an \s-1EMBOSS\s0 application.
.ie n .IP "manual_page($app, $manual)" 4
.el .IP "manual_page($app, \f(CW$manual\fR)" 4
.IX Item "manual_page($app, $manual)"
Generates the application-specific manual page.
.Sp
$app is the name of the application.
.Sp
$manual_html is the full text of the \s-1HTML\s0 application manual.
.IP "default_output_page($refresh_delay)" 4
.IX Item "default_output_page($refresh_delay)"
Generates the default output page to be used as a placeholder until the
application has finished running and the actual output is available.
.Sp
$refresh_delay is the number of seconds to wait between page reloads.
.IP "error_page(@error)" 4
.IX Item "error_page(@error)"
Generates an error page.
.Sp
@error is the text of the error message.  All elements of the list are joined
into a single string, so this method has the same syntax as print, warn, die,
etc.
.IP "\fIframeset_page()\fR" 4
.IX Item "frameset_page()"
Generates a page that sets up the menu and main content frames.
.SH "BUGS"
.IX Header "BUGS"
If the user has asked to see only required fields, sections containing only
optional fields will still be visible, even though the fields they contain are
hidden.  Fixing this requires better section handling in \s-1EMBOSS::ACD\s0.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2004 Luke McCarthy.  All rights reserved.  This program is free
software.  You may copy or redistribute it under the same terms as Perl itself.
